Mongodb:
{hist_aluno:{$exists:true}} (em collection alunos)
{hist_professor:{$exists:true}} (em collection professores)
{formado:1, formado ano:%ano%} (sendo que o semestre pode ser checado ao entrar em hist_aluno) (em collection alunos)
{nome_chefe:{$exists:true},Nome:{$exists:true}} (em collection departamentos)
{TCC:{$exists:true}} (em collection professores)

neo4j:
MATCH p=(Aluno)-[:Cursou]->(Curso) RETURN p 
MATCH p=(Professor)-[:Ensinou]->(Disciplina) RETURN p
Match p=(a:Aluno)-[:Cursou]->(Curso)
where a.formado = 1
return p
MATCH p=(Professor)-[:EhChefe]->(Departamento) RETURN p
match p=(Aluno)-[:Participa]->(TCC)
return p

Cassandra:
'Departamento.csv': "INSERT INTO departamento (nome, chefe) VALUES (%s, %s)" SELECT * from departamento
'Curso.csv': "INSERT INTO curso (nome, id_curso) VALUES (%s, %s)" SELECT * from departamento
'Disciplina.csv': "INSERT INTO disciplina (nome, codigo_disc) VALUES (%s, %s)" SELECT * from departamento
'TCC.csv': "INSERT INTO tcc (tcc_grupo, id_grupo, id_orientador) VALUES (%s, %s, %s)" SELECT * from departamento
'Aluno.csv': "INSERT INTO aluno (nome, idade, aluno_ra, id_grupo) VALUES (%s, %s, %s, %s)" SELECT * from departamento
'Professor.csv': "INSERT INTO professor (nome, idade, professor_ra, id_orientador) VALUES (%s, %s, %s, %s, %s)" SELECT * from departamento
'Hist_aluno.csv': "INSERT INTO historico (aluno_ra, codigo_disc, semestre, ano, nota) VALUES (%s, %s, %s, %s, %s)" SELECT * from departamento
'Hist_prof.csv': "INSERT INTO historicoprof (professor_ra, codigo_disc, semestre, ano) VALUES (%s, %s, %s, %s)" SELECT * from departamento
